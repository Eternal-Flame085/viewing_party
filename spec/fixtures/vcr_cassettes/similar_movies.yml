---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/upcoming?api_key=<DONT_EXPOSE_DATA>&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 10 Dec 2020 00:50:07 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 9ef84cf4cc2ba519912977f9e63d129e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MIA3-C5
      X-Amz-Cf-Id:
      - kdf8AMoR78pAbcXXSonBubVyefNZO_1Tclz2hBsKTi1yvuZuCIlJ_w==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 10 Dec 2020 00:50:07 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/upcoming?api_key=<DONT_EXPOSE_DATA>&page=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 10 Dec 2020 00:50:07 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 eb61efdee152c475afaeb939c428df9e.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MIA3-C5
      X-Amz-Cf-Id:
      - 8TdtbIOeC7hSz93-ZrW9VPc76U-UyR_c2iHTV9mt1t1n3cJmIanPPw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 10 Dec 2020 00:50:07 GMT
recorded_with: VCR 6.0.0
