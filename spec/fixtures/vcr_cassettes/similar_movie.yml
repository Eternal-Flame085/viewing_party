---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/460399?api_key=<DONT_EXPOSE_DATA>&append_to_response=reviews,credits,similar
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 10 Dec 2020 00:17:45 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      X-Memc:
      - HIT
      X-Memc-Key:
      - 1c107daba5029077b5f526182f4cc771c8daa5a7
      X-Memc-Age:
      - '12846'
      X-Memc-Expires:
      - '8754'
      Etag:
      - W/"febb0eeb4ef50208e3c7db7f27a8845c"
      Last-Modified:
      - Thu, 10 Dec 2020 00:17:45 GMT
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 24b9ed9aa2f44f71ea012f05fe255326.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - MIA3-C5
      X-Amz-Cf-Id:
      - vc-IJOOKtBISXKZogYChWDhR_p-wakhJci9NbdJjYgDccmHvdfiJsQ==
      Age:
      - '680'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 10 Dec 2020 00:29:05 GMT
recorded_with: VCR 6.0.0
